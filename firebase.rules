rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Funciones de ayuda
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Reglas para la colección users
    match /users/{userId} {
      allow read: if true;
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    // Reglas para la colección tweets
    match /tweets/{tweetId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        ((resource.data.userId == request.auth.uid) || 
         (request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['likes', 'likedBy', 'retweets', 'retweetedBy'])));
      allow delete: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || isAdmin());
    }

    // Reglas para la colección admins
    match /admins/{userId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
  }
}
